---
name: Create and publish a Docker image

on:
    push:
        tags:
            - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push-image:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Harden Security Runner
              uses: step-security/harden-runner@v2
              with:
                  egress-policy: block
                  disable-sudo: true
                  allowed-endpoints: >
                      api.github.com:443
                      deb.debian.org:80
                      files.pythonhosted.org:443
                      ghcr.io:443
                      github.com:443
                      *.cloudflare.docker.com:443
                      pypi.org:443
                      *.docker.io:443
                      *.githubusercontent.com:443
                      githubusercontent.com:443

            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  flavor: latest=true
                  tags: |
                      type=ref,event=tag
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to the Container registry
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v4
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=Valentina Noir Disord bot
